name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps

      - name: Lint
        run: npm run lint

  check-types:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps

      - name: Check types
        run: npm run check-types

  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps

      - name: Check format
        run: npm run check-format

  unit:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Test
        run: npm run test

  e2e-core:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run integration tests
        run: pnpm exec -- turbo run e2e --filter=@argos-ci/core --filter=@argos-ci/cli
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
          NODE_VERSION: ${{ matrix.node-version }}
          OS: ${{ matrix.os }}

  e2e-cypress:
    strategy:
      fail-fast: false
      matrix:
        node-version: [current]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run integration tests
        run: pnpm exec -- turbo run e2e --filter=@argos-ci/cypress
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
          NODE_VERSION: ${{ matrix.node-version }}
          OS: ${{ matrix.os }}

  e2e-playwright:
    strategy:
      fail-fast: false
      matrix:
        node-version: [current]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run integration tests
        run: pnpm exec -- turbo run e2e --filter=@argos-ci/playwright
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
          NODE_VERSION: ${{ matrix.node-version }}
          OS: ${{ matrix.os }}

  e2e-puppeteer:
    strategy:
      fail-fast: false
      matrix:
        node-version: [current]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run integration tests
        run: pnpm exec -- turbo run e2e --filter=@argos-ci/puppeteer
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
          NODE_VERSION: ${{ matrix.node-version }}
          OS: ${{ matrix.os }}

  e2e-webdriverio:
    strategy:
      fail-fast: false
      matrix:
        node-version: [20]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run integration tests
        run: pnpm exec -- turbo run e2e --filter=@argos-ci/webdriverio
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
          NODE_VERSION: ${{ matrix.node-version }}
          OS: ${{ matrix.os }}

  e2e-storybook:
    strategy:
      fail-fast: false
      matrix:
        node-version: [current]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup deps
        uses: ./.github/actions/setup-deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Server Storybook and run integration tests
        run: pnpm exec -- turbo run e2e --filter=@argos-ci/storybook
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
          NODE_VERSION: ${{ matrix.node-version }}
          OS: ${{ matrix.os }}
